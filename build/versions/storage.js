/*! scotty-lib - v1.0.0 - 2014-03-20 */
(function(){var async,__bind=function(fn,me){return function(){return fn.apply(me,arguments)}};async=require("async"),exports.storage=function(){function storage(db,checker){this.db=db,this.checker=checker,this._formatRecord=__bind(this._formatRecord,this),this._insertNew=__bind(this._insertNew,this)}return storage.prototype.syncVersionList=function(versions,callback){return null==callback&&(callback=function(){}),async.map(versions,this._insertNew.bind(this),function(){return function(err,results){return callback(versions,err,results)}}(this))},storage.prototype.install=function(version,callback){return null==callback&&(callback=function(){}),this.db.update({name:version},{$set:{installed:!0}},callback)},storage.prototype.get=function(version,callback){return null==callback&&(callback=function(){}),this.db.findOne({name:version},callback)},storage.prototype.getInstalled=function(callback){return null==callback&&(callback=function(){}),this.db.find({installed:!0},callback)},storage.prototype.getAll=function(callback){return null==callback&&(callback=function(){}),this.db.find({}).sort({name:-1}).exec(callback)},storage.prototype.getLatest=function(callback){return null==callback&&(callback=function(){}),this.db.find({},function(_this){return function(err,docs){var max,ver,vers,_i,_len;for(vers=[],_i=0,_len=docs.length;_len>_i;_i++)ver=docs[_i],vers.push(ver.clean);return max=_this.checker.getLatest(vers),_this.db.findOne({clean:max},callback)}}(this))},storage.prototype.isInstalled=function(name,callback){return null==callback&&(callback=function(){}),this.db.count({name:name,installed:!0},function(){return function(err,count){return callback(count>0?!0:!1)}}(this))},storage.prototype._insertNew=function(version,callback){var self;return self=this,this.db.findOne({name:version.name},function(err,doc){var record;return null==doc?(record=self._formatRecord(version),self.db.insert(record,function(err){return callback(err,record)})):callback(null,null)})},storage.prototype._formatRecord=function(version){return{name:version.name,installed:!1,url:version.tarball_url,clean:this.checker.cleanVersion(version.name)}},storage}()}).call(this);